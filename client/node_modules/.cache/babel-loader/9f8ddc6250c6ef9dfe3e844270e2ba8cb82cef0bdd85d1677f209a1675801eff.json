{"ast":null,"code":"export async function sendMessage(token, senderId, content) {\n  const response = await fetch(\"http://localhost:8080/api/messages\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      senderId,\n      content\n    })\n  });\n  if (!response.ok) {\n    const text = await response.text();\n    throw new Error(`Send message failed: ${text}`);\n  }\n  return await response.json();\n}\nexport async function fetchMessages(token) {\n  const response = await fetch(\"http://localhost:8080/api/messages\", {\n    method: 'GET',\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    const text = await response.text();\n    throw new Error(`Fetch messages failed: ${text}`);\n  }\n  return await response.json();\n}","map":{"version":3,"names":["sendMessage","token","senderId","content","response","fetch","method","headers","body","JSON","stringify","ok","text","Error","json","fetchMessages"],"sources":["C:/3313Finale/SilentWave/client/src/services/messageService.ts"],"sourcesContent":["export async function sendMessage(token: string, senderId: number, content: string) {\r\n    const response = await fetch(\"http://localhost:8080/api/messages\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({ senderId, content }),\r\n    });\r\n    if (!response.ok) {\r\n      const text = await response.text();\r\n      throw new Error(`Send message failed: ${text}`);\r\n    }\r\n    return await response.json();\r\n  }\r\n  \r\n  export async function fetchMessages(token: string) {\r\n    const response = await fetch(\"http://localhost:8080/api/messages\", {\r\n      method: 'GET',\r\n      headers: {\r\n        \"Authorization\": `Bearer ${token}`\r\n      }\r\n    });\r\n    if (!response.ok) {\r\n      const text = await response.text();\r\n      throw new Error(`Fetch messages failed: ${text}`);\r\n    }\r\n    return await response.json();\r\n  }\r\n  "],"mappings":"AAAA,OAAO,eAAeA,WAAWA,CAACC,KAAa,EAAEC,QAAgB,EAAEC,OAAe,EAAE;EAChF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;IACjEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUN,KAAK;IAClC,CAAC;IACDO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEC;IAAQ,CAAC;EAC5C,CAAC,CAAC;EACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,MAAM,IAAIC,KAAK,CAAC,wBAAwBD,IAAI,EAAE,CAAC;EACjD;EACA,OAAO,MAAMR,QAAQ,CAACU,IAAI,CAAC,CAAC;AAC9B;AAEA,OAAO,eAAeC,aAAaA,CAACd,KAAa,EAAE;EACjD,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;IACjEC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,eAAe,EAAE,UAAUN,KAAK;IAClC;EACF,CAAC,CAAC;EACF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,MAAM,IAAIC,KAAK,CAAC,0BAA0BD,IAAI,EAAE,CAAC;EACnD;EACA,OAAO,MAAMR,QAAQ,CAACU,IAAI,CAAC,CAAC;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}