{"ast":null,"code":"export async function signup(username, email, password) {\n  const response = await fetch(\"http://localhost:8080/api/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  if (!response.ok) {\n    const text = await response.text();\n    throw new Error(`Signup failed: ${text}`);\n  }\n  return await response.json();\n}\nexport async function login(email, password) {\n  const response = await fetch(\"http://localhost:8080/api/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (!response.ok) {\n    const text = await response.text();\n    throw new Error(`Login failed: ${text}`);\n  }\n  return await response.json();\n}","map":{"version":3,"names":["signup","username","email","password","response","fetch","method","headers","body","JSON","stringify","ok","text","Error","json","login"],"sources":["C:/3313Finale/SilentWave/client/src/services/authService.ts"],"sourcesContent":["export async function signup(username: string, email: string, password: string) {\r\n    const response = await fetch(\"http://localhost:8080/api/signup\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ username, email, password }),\r\n    });\r\n    if (!response.ok) {\r\n      const text = await response.text();\r\n      throw new Error(`Signup failed: ${text}`);\r\n    }\r\n    return await response.json();\r\n  }\r\n  \r\n  export async function login(email: string, password: string) {\r\n    const response = await fetch(\"http://localhost:8080/api/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n    if (!response.ok) {\r\n      const text = await response.text();\r\n      throw new Error(`Login failed: ${text}`);\r\n    }\r\n    return await response.json();\r\n  }\r\n  "],"mappings":"AAAA,OAAO,eAAeA,MAAMA,CAACC,QAAgB,EAAEC,KAAa,EAAEC,QAAgB,EAAE;EAC5E,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;IAC/DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAET,QAAQ;MAAEC,KAAK;MAAEC;IAAS,CAAC;EACpD,CAAC,CAAC;EACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,MAAM,IAAIC,KAAK,CAAC,kBAAkBD,IAAI,EAAE,CAAC;EAC3C;EACA,OAAO,MAAMR,QAAQ,CAACU,IAAI,CAAC,CAAC;AAC9B;AAEA,OAAO,eAAeC,KAAKA,CAACb,KAAa,EAAEC,QAAgB,EAAE;EAC3D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;IAC9DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;EACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,MAAM,IAAIC,KAAK,CAAC,iBAAiBD,IAAI,EAAE,CAAC;EAC1C;EACA,OAAO,MAAMR,QAAQ,CAACU,IAAI,CAAC,CAAC;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}