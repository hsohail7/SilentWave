{"ast":null,"code":"var _jsxFileName = \"C:\\\\3313Finale\\\\SilentWave\\\\client\\\\src\\\\pages\\\\Chat.tsx\",\n  _s = $RefreshSig$();\n// src/pages/Chat.tsx\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport ChatList from '../components/ChatList';\nimport { sendMessage, fetchMessages } from '../services/messageService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [allMessages, setAllMessages] = useState([]);\n  const token = localStorage.getItem('token') || '';\n  const userId = parseInt(localStorage.getItem('userId') || '0');\n\n  // 1) On mount, load messages once\n  // 2) Then set up an interval to poll for new messages every 2 seconds\n  useEffect(() => {\n    let isMounted = true;\n    let intervalId;\n    (async () => {\n      try {\n        const msgs = await fetchMessages(token);\n        if (isMounted) {\n          setAllMessages(msgs);\n        }\n      } catch (err) {\n        console.error('Initial fetch messages error:', err);\n      }\n    })();\n\n    // Poll every 2 seconds\n    intervalId = setInterval(async () => {\n      try {\n        const msgs = await fetchMessages(token);\n        if (isMounted) {\n          setAllMessages(msgs);\n        }\n      } catch (err) {\n        console.error('Polling fetch messages error:', err);\n      }\n    }, 2000);\n\n    // Cleanup on unmount: stop polling\n    return () => {\n      isMounted = false;\n      clearInterval(intervalId);\n    };\n  }, [token]);\n  const handleSend = async () => {\n    try {\n      const newMsg = await sendMessage(token, userId, message);\n      setAllMessages(prev => [...prev, newMsg]);\n      setMessage('');\n    } catch (err) {\n      console.error('Send message error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '80vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ChatList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            border: '1px solid #ccc',\n            padding: '1rem',\n            overflowY: 'auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyle: 'none',\n              paddingLeft: 0\n            },\n            children: allMessages.map(msg => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                marginBottom: '0.5rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"User \", msg.sender_id, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), \" \", msg.content]\n            }, msg.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            placeholder: \"Type message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSend,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"xwU280OGdmeETjziVn1wfusgBjo=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","Header","ChatList","sendMessage","fetchMessages","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","allMessages","setAllMessages","token","localStorage","getItem","userId","parseInt","isMounted","intervalId","msgs","err","console","error","setInterval","clearInterval","handleSend","newMsg","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","height","flex","flexDirection","border","padding","overflowY","listStyle","paddingLeft","map","msg","marginBottom","sender_id","content","id","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/3313Finale/SilentWave/client/src/pages/Chat.tsx"],"sourcesContent":["// src/pages/Chat.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport Header from '../components/Header';\r\nimport ChatList from '../components/ChatList';\r\nimport { sendMessage, fetchMessages } from '../services/messageService';\r\n\r\nconst Chat: React.FC = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [allMessages, setAllMessages] = useState<any[]>([]);\r\n\r\n  const token = localStorage.getItem('token') || '';\r\n  const userId = parseInt(localStorage.getItem('userId') || '0');\r\n\r\n  // 1) On mount, load messages once\r\n  // 2) Then set up an interval to poll for new messages every 2 seconds\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    let intervalId: NodeJS.Timer;\r\n\r\n    (async () => {\r\n      try {\r\n        const msgs = await fetchMessages(token);\r\n        if (isMounted) {\r\n          setAllMessages(msgs);\r\n        }\r\n      } catch (err) {\r\n        console.error('Initial fetch messages error:', err);\r\n      }\r\n    })();\r\n\r\n    // Poll every 2 seconds\r\n    intervalId = setInterval(async () => {\r\n      try {\r\n        const msgs = await fetchMessages(token);\r\n        if (isMounted) {\r\n          setAllMessages(msgs);\r\n        }\r\n      } catch (err) {\r\n        console.error('Polling fetch messages error:', err);\r\n      }\r\n    }, 2000);\r\n\r\n    // Cleanup on unmount: stop polling\r\n    return () => {\r\n      isMounted = false;\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [token]);\r\n\r\n  const handleSend = async () => {\r\n    try {\r\n      const newMsg = await sendMessage(token, userId, message);\r\n      setAllMessages(prev => [...prev, newMsg]);\r\n      setMessage('');\r\n    } catch (err) {\r\n      console.error('Send message error:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div style={{ display: 'flex', height: '80vh' }}>\r\n        <ChatList />\r\n        <div style={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n          <div style={{ flex: 1, border: '1px solid #ccc', padding: '1rem', overflowY: 'auto' }}>\r\n            <ul style={{ listStyle: 'none', paddingLeft: 0 }}>\r\n              {allMessages.map((msg) => (\r\n                <li key={msg.id} style={{ marginBottom: '0.5rem' }}>\r\n                  <strong>User {msg.sender_id}:</strong> {msg.content}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div style={{ padding: '1rem' }}>\r\n            <input\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n              placeholder=\"Type message...\"\r\n            />\r\n            <button onClick={handleSend}>Send</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}